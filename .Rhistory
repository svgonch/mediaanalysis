dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
}
}
## formula of count <= 100
else {for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
}}
media_data$date <- as.POSIXct(media_data$date, origin = "1970-01-01")
media_data$grep <- factor(media_data$grep, labels = c("no","yes"))
media_data$media_name <- factor(media_data$media_name, levels = media$num, labels = media$name)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_data <- data.frame()
##no resp
xxx <- 0
## no text
yyy <- 0
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_data <- data.frame()
##no resp
xxx <- 0
## no text
yyy <- 0
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_search <- function(media_name = "all", query = "", query_grep = "", count = "50", offset = "0") {
wa_se <- "https://api.vk.com/method/wall.search?"
owner_id <- "owner_id="
vers <- "&v=5.45"
query_form <- "&query="
ext <- "&extended=1"
own <- "&owners_only=1"
fields <- "&fields=members_count"
counting <- "&count="
offsetting <- "&offset="
## Go!
if(media_name == "all") {
id <- media[,2]
}
else {id <- media[which(media_name %in% media$name),2]}
count <- as.numeric(count)
offset <- as.numeric(offset)
## formula if count > 100
zapros <- NULL
if(count > 100) {
nt <- round(count/100, 0)
offset = -100
for(f in 1:(nt+1)) {
offset <- offset + 100
count = 100
for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
}
}
## formula of count <= 100
else {for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
}}
media_data$date <- as.POSIXct(media_data$date, origin = "1970-01-01")
media_data$grep <- factor(media_data$grep, labels = c("no","yes"))
media_data$media_name <- factor(media_data$media_name, levels = media$num, labels = media$name)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
media_data <- data.frame()
xxx <- 0
yyy <- 0
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
View(media_data)
media_search <- function(media_name = "all", query = "", query_grep = "", count = "50", offset = "0") {
wa_se <- "https://api.vk.com/method/wall.search?"
owner_id <- "owner_id="
vers <- "&v=5.45"
query_form <- "&query="
ext <- "&extended=1"
own <- "&owners_only=1"
fields <- "&fields=members_count"
counting <- "&count="
offsetting <- "&offset="
## Go!
if(media_name == "all") {
id <- media[,2]
}
else {id <- media[which(media_name %in% media$name),2]}
count <- as.numeric(count)
offset <- as.numeric(offset)
## formula if count > 100
zapros <- NULL
if(count > 100) {
nt <- round(count/100, 0)
offset = -100
for(f in 1:(nt+1)) {
offset <- offset + 100
count = 100
for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
}
}
## formula of count <= 100
else {for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
}}
media_data$date <- as.POSIXct(media_data$date, origin = "1970-01-01")
media_data$grep <- factor(media_data$grep, labels = c("no","yes"))
media_data$media_name <- factor(media_data$media_name, levels = media$num, labels = media$name)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
media_data <- data.frame()
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_search <- function(media_name = "all", query = "", query_grep = "", count = "50", offset = "0") {
wa_se <- "https://api.vk.com/method/wall.search?"
owner_id <- "owner_id="
vers <- "&v=5.45"
query_form <- "&query="
ext <- "&extended=1"
own <- "&owners_only=1"
fields <- "&fields=members_count"
counting <- "&count="
offsetting <- "&offset="
## Go!
if(media_name == "all") {
id <- media[,2]
}
else {id <- media[which(media_name %in% media$name),2]}
count <- as.numeric(count)
offset <- as.numeric(offset)
## formula if count > 100
zapros <- NULL
if(count > 100) {
nt <- round(count/100, 0)
offset = -100
for(f in 1:(nt+1)) {
offset <- offset + 100
count = 100
for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0 & length(wall_media$response$groups$members_count)>0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
}
}
## formula of count <= 100
else {for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0 & length(wall_media$response$groups$members_count)>0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
followers = wall_media$response$groups$members_count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
}}
media_data$date <- as.POSIXct(media_data$date, origin = "1970-01-01")
media_data$grep <- factor(media_data$grep, labels = c("no","yes"))
media_data$media_name <- factor(media_data$media_name, levels = media$num, labels = media$name)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
media_data <- data.frame()
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
dat<-data.frame()
media_data <- data.frame()
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
View(media_data)
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = 13)
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = 10)
qplot(date, likes, data = media_data2, size = 10, alpha(color = media_data2$media_name, alpha = 0.5))
qplot(date, likes, data = media_data2, size = 10, alpha(colour = media_data2$media_name, alpha = 0.5))
qplot(date, likes, data = media_data2, size = 10, alpha(alpha = 0.5))
qplot(date, likes, data = media_data2, size = 10, color = media_data2$media_name, alpha = 0.5)
qplot(date, likes, data = media_data2, size = 10, color = media_data2$media_name, alpha = 0.2)
qplot(date, likes, data = media_data2, size = 10, fill = media_data2$media_name, alpha = 0.2)
qplot(date, likes, data = media_data2, size = 10, color = media_data2$media_name, alpha = 0.2)
qplot(date, likes, data = media_data2, size = 8, color = media_data2$media_name, alpha = 0.2)
qplot(date, likes, data = media_data2, color = media_data2$media_name, aes(size = 8, alpha = 0.2))
qplot(date, likes, data = media_data2, color = media_data2$media_name)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = hist)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "histogram")
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = c("point", "smooth"))
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = c("point"))
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "point", size = 8)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "point", size = 5)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "point", size = 3)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "point", size = 1)
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "point")
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "ball")
qplot(date, likes, data = media_data2, color = media_data2$media_name)
media_search <- function(media_name = "all", query = "", query_grep = "", count = "50", offset = "0") {
wa_se <- "https://api.vk.com/method/wall.search?"
owner_id <- "owner_id="
vers <- "&v=5.45"
query_form <- "&query="
ext <- "&extended=1"
own <- "&owners_only=1"
fields <- "&fields=members_count"
counting <- "&count="
offsetting <- "&offset="
## Go!
if(media_name == "all") {
id <- media[,2]
}
else {id <- media[which(media_name %in% media$name),2]}
count <- as.numeric(count)
offset <- as.numeric(offset)
## formula if count > 100
zapros <- NULL
if(count > 100) {
nt <- round(count/100, 0)
offset = -100
for(f in 1:(nt+1)) {
offset <- offset + 100
count = 100
for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
}
}
## formula of count <= 100
else {for(i in 1:length(id)) {
zapros <- NULL
zapros <- paste(wa_se, owner_id, id[i], query_form, query, own, counting, count, offsetting, offset, ext, fields, vers, "&access_token=", token, sep = "")
wall_media <- fromJSON(zapros)
if(length(wall_media$response$count) > 0) {
dat <- data.frame(media_name = wall_media$response$items$from_id,
media_id = wall_media$response$items$from_id,
id = wall_media$response$items$id,
date = wall_media$response$items$date,
comments = wall_media$response$items$comments$count,
likes = wall_media$response$items$likes$count,
reposts = wall_media$response$items$reposts$count,
text = wall_media$response$items$text)
dat$text <- as.character(dat$text)
dat$text <- str_trim(dat$text)
if ("text" %in% names(wall_media$response$items) == TRUE) {
for (l in 1:nrow(dat)) {
grep_vec <- dat[l, "text", drop = TRUE]
if(grepl(query_grep, grep_vec, "text", ignore.case = TRUE) == TRUE) {
dat[l, "grep"] <- 1
} else {dat[l, "grep"] <- 0}
}
} else {yyy <- yyy+1}
} else {xxx <- xxx+1}
media_data <- rbind(media_data, dat)
}}
media_data$date <- as.POSIXct(media_data$date, origin = "1970-01-01")
media_data$grep <- factor(media_data$grep, labels = c("no","yes"))
media_data$media_name <- factor(media_data$media_name, levels = media$num, labels = media$name)
assign("media_data", media_data, envir = globalenv())
assign("xxx", xxx, envir = globalenv())
assign("yyy", yyy, envir = globalenv())
}
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
media_data <- data.frame()
media_search(query = "дальнобойщик", query_grep = "протест|митинг", count = 200)
unique(media_data$media_name)
col <- brewer.pal(4, "Set1")
pal <- colorRampPalette(col)
par(mar=c(5.1, 4.1, 4.1, 8.1), xpd=TRUE)
with(media_data2, plot(date, likes, pch = 19, col = media_data2$media_name, xaxt = "n", yaxt = "n"))
axis.POSIXct(1, at=seq(as.Date(min(media_data2$date)), as.Date(max(media_data2$date)), by="10 day"), format="%m-%d")
axis(2, at=seq(min(media_data2$likes), max(media_data2$likes), by=1000), las=2)
legend("topright", inset=c(-0.52,0), pch=19, col= unique(media_data2$media_name), legend = unique(media_data2$media_name))
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "bar")
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "bar", stat = "identity")
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "bar")
?qplot
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "bar")
?ggplot2
??ggplot2
qplot(date, likes, data = media_data2, color = media_data2$media_name, geom = "histogram", binwidth = .1)
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(4))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(1))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(.4))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(.6))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(-.6))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(-0.6))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(0.6))
qplot(date, likes, data = media_data2, color = media_data2$media_name, size = I(3), alpha = I(0.6), main = "Кол-во лайков новостям про дальнобойщиков")
dev.copy(png, "daln.png")
dev.off()
?dev.copy
dev.copy(png, "daln.png", width = 500, height = 400)
dev.off()
dev.copy(png, "daln.png", width = 550, height = 400)
dev.off()
